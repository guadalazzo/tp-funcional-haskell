Punto 1b
Marcos toma una soda de nivel 3 y queda con 2 bebidas
Marcos toma una soda de nivel 3 y queda con 40 de resistencia

 tomar (soda 3) marcos
Cliente {nombre = "errrpMarcos", resistencia = 40, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = [], bebidas = [<function>]}], bebidas = [<function>,<function>]}

Punto 1c
Rodri toma una soda de nivel 1 y una soda de nivel 2 y queda con nombre errperpRodri
Marcos toma un klusener de huevo, un tintico y una jarraLoca y queda con 30 de resistencia
Marcos toma un klusener de huevo, un tintico y una jarraLoca y queda con 4 bebidas en el historial

 tomarTragos [soda 1, soda 2] rodri
Cliente {nombre = "errperpRodri", resistencia = 55, amigos = [], bebidas = [<function>,<function>,<function>]}

tomarTragos [klusener "huevo",tintico,jarraloca] marcos
Cliente {nombre = "Marcos", resistencia = 30, amigos = [Cliente {nombre = "Rodri", resistencia = 45, amigos = [], bebidas = [<function>]}], bebidas = [<function>,<function>,<function>,<function>]}

Punto 1d
Ana pide “dame otro” y debe dar error
Marcos pide “dame otro” y tiene 2 bebidas en el historial
Marcos pide “dame otro” y lo deja con 34 de resistencia
Rodri toma una soda de nivel 1, y "dameOtro" da como resultado que tiene 3 bebidas
Rodri toma una soda de nivel 1, y "dameOtro" da como resultado que su nombre queda “erperpRodri”

 dameOtro ana
*** Exception: Prelude.last: empty list

dameOtro marcos
Cliente {nombre = "Marcos", resistencia = 34, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = [], bebidas = [<function>]}], bebidas = [<function>,<function>]}

 tomarTragos [soda 1, dameOtro] rodri
Cliente {nombre = "erperpRodri", resistencia = 55, amigos = [], bebidas = [<function>,<function>,<function>]}

Punto 2b
Rodri puede tomar dos bebidas, entre un grog XD, un tintico y un klusener de frutilla
Entre un grog XD, un tintico, un klusener de "fruuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuutilla" se puede tomar una sola bebida

cuantasPuedeTomar rodri [grogxd,tintico,klusener "frutilla"]
2

 cuantasPuedeTomar rodri [grogxd,tintico,klusener "fruuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuutilla"]
1

Punto 3b
Rodri hace una salida de amigos y debe quedar con un amigo
Rodri hace una salida de amigos y se debe llamar “erpRodri”
Rodri hace una salida de amigos y debe quedar con 45 de resistencia
Rodri hace una salida de amigos y su primer y único amigo Roberto Carlos debe quedar con 155 de resistencia
Rodri hace una salida de amigos y debe quedar con 4 bebidas en su historial

itinerario salidaDeAmigos rodri
Cliente {nombre = "erpRodri", resistencia = 45, amigos = [Cliente {nombre = "Roberto Carlos", resistencia = 155, amigos = [], bebidas = []}], bebidas = [<function>,<function>,<function>,<function>]}


Punto 4a
la intensidad de la mezcla explosiva es 1.6
la intensidad de la salidaDeAmigos es 4.0
la intensidad del itinerario basico es 0.8

calcularIntensidad mezclaExplosiva
1.6

calcularIntensidad salidaDeAmigos
4.0

calcularIntensidad itinerarioBasico
0.8

Punto 4b
Entre la salida de amigos, la mezcla explosiva y el itinerario básico, el itinerario más intenso es la salida de amigos (tip: se puede reconocer por el nombre)
Rodri hace el itinerario más intenso entre una salida de amigos, la mezcla explosiva y el itinerario básico y queda con el nombre "erpRodri"
Rodri hace el itinerario más intenso entre una salida de amigos, la mezcla explosiva y el itinerario básico y queda con resistencia 45
Rodri hace el itinerario más intenso entre una salida de amigos, la mezcla explosiva y el itinerario básico y queda con un amigo: Roberto Carlos

itinerarioMasIntenso [salidaDeAmigos, itinerarioBasico ,mezclaExplosiva]
Itinerario {nombreItinerario = "Salida De Amigos", horas = 1.0, acciones = [<function>,<function>,<function>,<function>]}


elegirMasIntenso [itinerarioBasico, mezclaExplosiva, salidaDeAmigos] rodri
Cliente {nombre = "erpRodri", resistencia = 45, amigos = [Cliente {nombre = "Roberto Carlos", resistencia = 155, amigos = [], bebidas = []}], bebidas = [<function>,<function>,<function>,<function>]}


Justificar: ¿Puede chuckNorris pedir otro trago con la función dameOtro?
-No, no puede ya que la funcion no va a ser capaz de encontrar la ultima bebida que se tomo.

Justificar: ¿puedo preguntar si chuckNorris tiene más resistencia que ana?
-Si, ya que la soda no modifica la resistencia por lo tanto la resistencia de chuckNorris sera la misma y puede ser evaluada con respecto a la de ana


